from sqlalchemy import Column, Integer, Float, String, DateTime, ForeignKey, Boolean
from sqlalchemy.sql import func
from db.database import Base
from pydantic import BaseModel, Field
from datetime import datetime
from sqlalchemy.orm import relationship
from typing import Optional


class Payment(Base):
    __tablename__ = "payments"

    id = Column(Integer, primary_key=True, index=True)
    user_id = Column(Integer, ForeignKey("users.id"), nullable=False)

    # –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞: promote –∏–ª–∏ extra_request
    purpose = Column(String, nullable=False, default="promote")

    # –ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    package_name = Column(String, nullable=True)

    # –ö–æ–ª-–≤–æ –ø–æ–¥—ä–µ–º–æ–≤ –≤ –¥–µ–Ω—å: 3, 5, 7 (—Ç–æ–ª—å–∫–æ –¥–ª—è promote)
    times_per_day = Column(Integer, nullable=True)

    # –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –¥–Ω—è—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 30)
    duration_days = Column(Integer, default=30)

    # –°—É–º–º–∞ –æ–ø–ª–∞—Ç—ã
    amount = Column(Float, nullable=False)

    # –ë–∞–Ω–∫: kaspi, halyk, forte
    bank = Column(String, nullable=False)

    # –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã
    status = Column(String, default="pending")  # pending / paid / failed

    # –î–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
    start_date = Column(DateTime(timezone=True), server_default=func.now())
    end_date = Column(DateTime(timezone=True), nullable=True)

    # –ê–∫—Ç–∏–≤–µ–Ω –ª–∏ –ø–∞–∫–µ—Ç
    is_active = Column(Boolean, default=False)

    # –°–≤—è–∑—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    user = relationship("User", back_populates="payments")


# üì¶ Pydantic –º–æ–¥–µ–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞
class PaymentCreate(BaseModel):
    amount: int = Field(..., gt=0)
    package_type: str  # "3", "5", "7"
    bank: str  # Kaspi, Halyk, Forte


# üìÑ –û—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É
class PaymentResponse(BaseModel):
    id: int
    user_id: int
    amount: float
    package_name: Optional[str] = None
    purpose: str
    bank: str
    status: str
    is_active: bool
    start_date: datetime
    end_date: Optional[datetime] = None

    class Config:
        from_attributes = True
